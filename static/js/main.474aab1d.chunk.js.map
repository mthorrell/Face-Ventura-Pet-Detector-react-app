{"version":3,"sources":["Model.jsx","parray.jsx","petmatch.jsx","App.js","serviceWorker.js","index.js"],"names":["Model","props","predict","image","a","model","mdl","document","body","appendChild","html2canvas","useCORS","allowTaint","cvs","removeChild","width","height","img_t_bw","tensor_grayscale","tf","fromPixels","reshape","output","arraySync","this","x","rFactor","gFactor","bFactor","r","slice","shape","g","b","gray","mul","add","Parray","arr","fnc","mdlref","totalLoaded","loadedCount","length","embs","addEmbs","imgs","totalEmb","embCount","cback","createImg","img","createElement","src","Date","getTime","crossOrigin","onload","map","i","getEmbs","emb","addImgs","PetMatch","mov","setState","mouseOver","mlef","state","info","inputSRC","petready","inputready","bothready","className","onMouseOver","onMouseLeave","style","display","String","name","alt","dist","toFixed","href","link","target","rel","Component","App","imgUploaded","e","inputURL","URL","createObjectURL","files","handleLoad","input_emb","inputReady","run","handleEmb","petsReady","pdata","parr","op","find_distances","pets_distances","refdata","key","push","sort","y","d3","pets","img_emb","el","emb_compares","pet_emb","pe","distance","Math","pow","zipInput","console","log","zipref","value","substr","newdat","zipdata","filter","d","searchzip","nmatch","min","getRandomSubarray","petsFound","nmatched","undefined","zip","dsty","type","onChange","size","maxLength","ref","onMouseUp","onLoad","p","temp","index","shuffled","floor","random","Boolean","window","location","hostname","match","rawzip","require","rawdata","NaN","addKey","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.474aab1d.chunk.js","sourcesContent":["import * as tf from \"@tensorflow/tfjs\";\nimport html2canvas from \"html2canvas\";\n\nclass Model {\n  constructor(props) {\n    this.model = tf.loadLayersModel(\"model/model.json\");\n  }\n\n  predict = async (image) => {\n    const mdl = await this.model;\n    document.body.appendChild(image);\n    var cvs = await html2canvas(image, { useCORS: true, allowTaint: false });\n    document.body.removeChild(image);\n    cvs.width = 20;\n    cvs.height = 20;\n    //html2canvas(image, { useCORS: true }).then(function (canvas) {\n    //  console.log(\"success\");\n    //  tf.browser.fromPixels(canvas);\n    //  console.log(\"more success\");\n    //});\n    //document.removeChild(image);\n\n    //image.crossOrigin = \"\";\n    //var cvs = document.createElement(\"canvas\");\n    //cvs.width = 20;\n    //cvs.height = 20;\n\n    //var ctx = cvs.getContext(\"2d\");\n    //ctx.drawImage(image, 0, 0, 20, 20);\n\n    var img_t_bw = this.tensor_grayscale(tf.browser.fromPixels(cvs)).reshape([\n      1,\n      20,\n      20,\n      1,\n    ]);\n\n    var output = mdl.predict(img_t_bw).arraySync()[0];\n    return output;\n  };\n\n  tensor_grayscale(x) {\n    const rFactor = tf.scalar(0.299); // copies the values from torch\n    const gFactor = tf.scalar(0.587);\n    const bFactor = tf.scalar(0.114);\n\n    // separate out each channel. x.shape[0] and x.shape[1] will give you\n    // the correct dimensions regardless of image size\n    var r = x.slice([0, 0, 0], [x.shape[0], x.shape[1], 1]);\n    var g = x.slice([0, 0, 1], [x.shape[0], x.shape[1], 1]);\n    var b = x.slice([0, 0, 2], [x.shape[0], x.shape[1], 1]);\n\n    // add all the tensors together, as they should all be the same dimensions.\n    var gray = r.mul(rFactor).add(g.mul(gFactor)).add(b.mul(bFactor));\n    gray = gray.mul(tf.scalar(1.0 / 255.0));\n\n    return gray;\n  }\n}\n\nexport default Model;\n","class Parray {\n  constructor(arr, fnc, mdlref) {\n    this.model = mdlref;\n    this.arr = arr;\n    this.loadedCount = 0;\n    this.embCount = 0;\n    this.imgs = this.addImgs(arr);\n    this.embs = [];\n    this.cback = fnc;\n  }\n\n  addImgs(arr) {\n    return arr.map((a) => this.createImg(a));\n  }\n\n  totalLoaded = () => {\n    this.loadedCount = this.loadedCount + 1;\n    if (this.loadedCount === this.arr.length) {\n      this.embs = this.addEmbs(this.imgs);\n    }\n  };\n\n  totalEmb = () => {\n    this.embCount = this.embCount + 1;\n    if (this.embCount === this.arr.length) {\n      this.cback();\n    }\n  };\n\n  createImg = (a) => {\n    var img = document.createElement(\"img\");\n    img.src = a.src + \"?\" + new Date().getTime();\n    img.crossOrigin = \"Anonymous\";\n    img.onload = this.totalLoaded;\n    return img;\n  };\n\n  addEmbs = (imgs) => {\n    return imgs.map((i) => this.getEmbs(i));\n  };\n\n  getEmbs = async (i) => {\n    var emb = await this.model.predict(i);\n    this.totalEmb();\n    return emb;\n  };\n}\n\nexport default Parray;\n","import React, { Component } from \"react\";\nimport \"./petmatch.css\";\n\nclass PetMatch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mouseOver: false,\n    };\n  }\n\n  mov = () => {\n    this.setState({ mouseOver: true });\n  };\n\n  mlef = () => {\n    this.setState({ mouseOver: false });\n  };\n\n  render() {\n    const info = this.props.info;\n    const inputSRC = this.props.inputSRC;\n    const petready = this.props.petready;\n    const inputready = this.props.inputready;\n    const bothready = petready & inputready;\n\n    return (\n      <div\n        className={this.state.mouseOver ? \"mover\" : \"normal\"}\n        onMouseOver={this.mov}\n        onMouseLeave={this.mlef}\n      >\n        <h2 style={{ display: petready ? \"\" : \"none\" }}>{String(info.name)}</h2>\n        <span>\n          <img\n            className=\"inRow\"\n            src={inputSRC}\n            alt=\"\"\n            style={{\n              display: inputready ? \"inline\" : \"none\",\n            }}\n          />\n          <img\n            className=\"inRow\"\n            alt={petready ? info.name : \"\"}\n            src={info.src}\n            style={{ display: petready ? \"\" : \"none\" }}\n          />\n        </span>\n\n        <div>\n          <div>\n            <span\n              style={{\n                display: bothready ? \"inline\" : \"none\",\n              }}\n            >\n              Distance: {info.dist.toFixed(2)}\n            </span>\n          </div>\n          <span>\n            {petready ? (\n              <a href={info.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                {\" \"}\n                See more of {String(info.name)}\n              </a>\n            ) : (\n              \"LOADING PET\"\n            )}\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PetMatch;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Model from \"./Model\";\nimport Parray from \"./parray.jsx\";\nimport * as d3 from \"d3\";\nimport PetMatch from \"./petmatch\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.emb = null;\n    this.inputReady = false;\n    this.petsReady = false;\n    this.model = new Model();\n    this.parr = new Parray(props.pdata, this.handleEmb, this.model);\n    this.refdata = props.pdata;\n    this.zipdata = props.zipdata;\n\n    this.zipref = undefined;\n    this.zip = (e) => (this.zipref = e);\n\n    this.state = {\n      inputURL: null,\n      pdata: props.pdata,\n      dsty: \"border\",\n      inputReady: false,\n      petsReady: false,\n      petsFound: false,\n      nmatched: 20,\n    };\n  }\n\n  imgUploaded = (e) => {\n    this.setState({ inputURL: URL.createObjectURL(e.target.files[0]) });\n  };\n\n  handleLoad = async (e) => {\n    var input_emb = await this.model.predict(e.target);\n    this.emb = input_emb;\n    this.inputReady = true;\n    this.setState({ inputReady: true });\n    this.run();\n  };\n\n  handleEmb = (e) => {\n    this.petsReady = true;\n    this.setState({ petsReady: true, pdata: this.parr.arr });\n    this.run();\n  };\n\n  run = async () => {\n    if (!this.petsReady | !this.inputReady) {\n      return;\n    }\n    var op = this.find_distances(this.parr.embs, this.emb);\n\n    var pets_distances = [];\n    for (var i = 0; i < this.refdata.length; i++) {\n      pets_distances.push({\n        dist: await op[i],\n        key: this.refdata[i][\"key\"],\n        name: this.refdata[i][\"name\"],\n        link: this.refdata[i][\"link\"],\n        src: this.refdata[i][\"src\"],\n      });\n    }\n    pets_distances.sort(function (x, y) {\n      return d3.ascending(x.dist, y.dist);\n    });\n    this.setState({ pdata: pets_distances });\n  };\n\n  find_distances = (pets, img_emb) => {\n    var dist_array = [];\n    dist_array = pets.map((el) => this.emb_compares(img_emb, el));\n    return dist_array;\n  };\n\n  emb_compares = async (img_emb, pet_emb) => {\n    var pe = await pet_emb;\n\n    var distance =\n      Math.pow(pe[0] - img_emb[0], 2) +\n      Math.pow(pe[1] - img_emb[1], 2) +\n      Math.pow(pe[2] - img_emb[2], 2) +\n      Math.pow(pe[3] - img_emb[3], 2) +\n      Math.pow(pe[4] - img_emb[4], 2);\n\n    return distance;\n  };\n\n  zipInput = (e) => {\n    console.log(\"zipinput\", this.zipref.value.substr(0, 3));\n    var newdat = this.zipdata.filter((d) => {\n      return d.searchzip.substr(0, 5) === this.zipref.value.substr(0, 5);\n    });\n\n    if (newdat.length === 0) {\n      newdat = this.zipdata.filter((d) => {\n        return d.searchzip.substr(0, 4) === this.zipref.value.substr(0, 4);\n      });\n    }\n\n    if (newdat.length === 0) {\n      newdat = this.zipdata.filter((d) => {\n        return d.searchzip.substr(0, 3) === this.zipref.value.substr(0, 3);\n      });\n    }\n\n    if (newdat.length === 0) {\n      newdat = this.zipdata.filter((d) => {\n        return d.searchzip.substr(0, 2) === this.zipref.value.substr(0, 2);\n      });\n    }\n\n    if (newdat.length === 0) {\n      newdat = this.zipdata.filter((d) => {\n        return d.searchzip.substr(0, 1) === this.zipref.value.substr(0, 1);\n      });\n    }\n\n    if (newdat.length > 0) {\n      var nmatch = Math.min(20, newdat.length);\n      newdat = this.getRandomSubarray(newdat, nmatch);\n\n      this.refdata = newdat;\n      this.setState({ petsReady: false, petsFound: true, nmatched: nmatch });\n      this.parr = new Parray(newdat, this.handleEmb, this.model);\n    } else {\n      newdat = this.getRandomSubarray(this.zipdata, 20);\n\n      this.refdata = newdat;\n      this.setState({ petsReady: false, petsFound: false, nmatched: 20 });\n      this.parr = new Parray(newdat, this.handleEmb, this.model);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Face Ventura Pet Detector</h1>\n          Use Facial Recognition to find shelter pets that look like you!\n          <br /> <br /> Upload your photo:{\" \"}\n          <input type=\"file\" onChange={this.imgUploaded} />\n          <br /> Input your zipcode:\n          <span>\n            <input type=\"text\" size=\"6\" maxLength=\"5\" ref={this.zip} />\n            <button onMouseUp={this.zipInput}>Refresh</button>\n          </span>\n          <div>\n            {this.state.petsFound\n              ? \"Found nearby pets! Showing \" +\n                String(this.state.nmatched) +\n                \" pets.\"\n              : \"No nearby pets, showing \" +\n                String(this.state.nmatched) +\n                \" pets in the US.\"}\n          </div>\n          <br />\n          <div className={this.state.petsReady ? \"\" : \"loading\"}>\n            Loading Model and Data {this.state.petsReady ? \"✅\" : \"\"}\n          </div>\n          <br />\n        </header>\n        <div>\n          <span style={{ display: this.state.inputReady ? \"inline\" : \"none\" }}>\n            Matching{\" \"}\n            <img\n              src={this.state.inputURL}\n              alt=\"\"\n              onLoad={this.handleLoad}\n              width=\"15%\"\n            />{\" \"}\n            with pets available for adoption.\n          </span>\n          <div>\n            {this.state.pdata.map((p) => (\n              <PetMatch\n                info={p}\n                inputSRC={this.state.inputURL}\n                petready={this.state.petsReady}\n                inputready={this.state.inputReady}\n              />\n            ))}\n          </div>\n        </div>\n        <br />\n        <br />\n        <footer className=\"App-footer\">\n          Data retrieved from the petfinder.com API.\n        </footer>\n      </div>\n    );\n  }\n\n  //Zip code information from\n  //<a href=\"https://simplemaps.com/data/us-zips\">\n  //  https://simplemaps.com/data/us-zips\n  //</a>\n  //.\n\n  getRandomSubarray(arr, size) {\n    var shuffled = arr.slice(0),\n      i = arr.length,\n      min = i - size,\n      temp,\n      index;\n    while (i-- > min) {\n      index = Math.floor((i + 1) * Math.random());\n      temp = shuffled[index];\n      shuffled[index] = shuffled[i];\n      shuffled[i] = temp;\n    }\n    return shuffled.slice(min);\n  }\n}\n//https://simplemaps.com/data/us-zips\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nfunction addKey(e, i) {\n  e.key = i;\n  //e.src = e.src; // + \"?\" + new Date().getTime();\n  e.emb = null;\n  e.dist = NaN;\n  return e;\n}\n\nfunction getRandomSubarray(arr, size) {\n  var shuffled = arr.slice(0),\n    i = arr.length,\n    min = i - size,\n    temp,\n    index;\n  while (i-- > min) {\n    index = Math.floor((i + 1) * Math.random());\n    temp = shuffled[index];\n    shuffled[index] = shuffled[i];\n    shuffled[i] = temp;\n  }\n  return shuffled.slice(min);\n}\n\nvar rawzip = require(\"./data/petfinder_out_zip.json\");\nrawzip = rawzip.map((e, i) => addKey(e, i));\n//var idx = tf.randomUniform([50]).mul(rawzip.length).floor().arraySync();\nvar rawdata = getRandomSubarray(rawzip, 20);\n\n//var rawdata = require(\"./data/petfinder_out.json\");\n//rawdata = rawdata.map((e, i) => addKey(e, i));\n\nReactDOM.render(\n  <React.StrictMode>\n    <App pdata={rawdata} zipdata={rawzip} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}